{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Assignment\\\\frontend\\\\src\\\\Screen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Screen() {\n  _s();\n  const [topic, setTopic] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"http://localhost:5000/v1/api/trivia\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          topic\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Network response was not ok: ${response.status}`);\n      }\n      const data = await response.json();\n      setQuestions(data.questions);\n    } catch (error) {\n      console.error(error);\n      setError(error.message || \"Failed to fetch questions\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trivia-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: topic,\n      onChange: e => setTopic(e.target.value),\n      placeholder: \"Enter a topic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: isLoading,\n      children: isLoading ? \"Loading...\" : \"Get Trivia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: question\n      }, question, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Screen, \"EDtlM4rfo0SduJCcsUHgpAFzO0k=\");\n_c = Screen;\nexport default Screen;\nvar _c;\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Screen","_s","topic","setTopic","questions","setQuestions","isLoading","setIsLoading","error","setError","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","message","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","question","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Assignment/frontend/src/Screen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Screen() {\r\n  const [topic, setTopic] = useState(\"\");\r\n  const [questions, setQuestions] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/v1/api/trivia\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ topic }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Network response was not ok: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setQuestions(data.questions);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message || \"Failed to fetch questions\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='trivia-app'>\r\n      <input\r\n        type='text'\r\n        value={topic}\r\n        onChange={(e) => setTopic(e.target.value)}\r\n        placeholder='Enter a topic'\r\n      />\r\n      <button onClick={handleSubmit} disabled={isLoading}>\r\n        {isLoading ? \"Loading...\" : \"Get Trivia\"}\r\n      </button>\r\n      {error && <p className='error'>{error}</p>}\r\n      {questions.length > 0 && (\r\n        <ul>\r\n          {questions.map((question) => (\r\n            <li key={question}>{question}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Screen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}